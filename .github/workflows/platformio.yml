name: platformio

on:
  push:
    branches: [ '*' ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target: ['pro16MHzatmega328']
    steps:
      - uses: actions/checkout@v3

      - name: Extract Version
        run: |
          echo "build_name=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "build_branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "build_tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "build_sha=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV
      - name: Make Version
        run: |
          echo "build_file_devel=si5351gen_${{ env.build_sha }}_${{ matrix.target }}.bin" >> $GITHUB_ENV
          echo "build_file_release=si5351gen_${{ env.build_tag }}_${{ matrix.target }}.bin" >> $GITHUB_ENV
      - name: Print Version
        run: |
          echo SHA:     ${{ env.build_sha }}
          echo TAG:     ${{ env.build_tag }}
          echo BRANCH:  ${{ env.build_branch }}
          echo NAME:    ${{ env.build_name }}
          echo DEVEL:   ${{ env.build_file_devel }}
          echo RELEASE: ${{ env.build_file_release }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache PlatformIO
        uses: actions/cache@v3
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install platformio


      - name: Run Development Build
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: |
          platformio run -e ${{ matrix.target }}
        env:
          PLATFORMIO_BUILD_FLAGS: -DREVISION=${{ env.build_sha }}

      - name: Create Development Artifact
        uses: actions/upload-artifact@v3
        if: "!startsWith(github.ref, 'refs/tags/')"
        with:
          name: ${{ env.build_file_devel }}
          path: .pio/build/${{ matrix.target }}/firmware.bin


      - name: Run Release Build
        if: "startsWith(github.ref, 'refs/tags/')"
        run: |
          platformio run -e ${{ matrix.target }}
        env:
          PLATFORMIO_BUILD_FLAGS: -DREVISION=${{ env.build_sha }} -DVERSION=${{ env.build_tag }}

      - name: Create Release Artifact
        uses: actions/upload-artifact@v3
        if: "startsWith(github.ref, 'refs/tags/')"
        with:
          name: ${{ env.build_file_release }}
          path: .pio/build/${{ matrix.target }}/firmware.bin
